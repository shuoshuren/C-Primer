10.对象与类
10.2类
不必在类声明中使用关键字private，因为类对象的默认访问控制是private。

10.2.3实现类成员函数
为那些有类声明中的原型表示的成员函数提供代码，有函数头和函数体，也有返回类型和参数。此外还有两个特殊特征：
1.定义成员函数时，使用作用域解析运算符（::）来标识函数所属的类；
2.类方法可以访问类的private成员。
eg:
void Stock::update(double price){}

2.内联方法
其定义位于类声明中的函数都将自动成为内联函数，类声明常将短小的成员函数作为内联函数。
在类声明之外定义成员函数要想成为内联函数只需要在定义函数时使用inline限定符即可。

内联函数的特殊：要求每个使用他的文件都要对其进行定义，为确保内联定义对多个文件程序中的所有文件都可用，最简单的方法就是：将内联定义放在定义类的头文件中。

10.2.6小结
典型的类声明的格式：
class ClassName{

	private：
		data member declarations;
	public:
		member function prototypes;
}

10.3类的构造函数和析构函数
10.3.3默认构造函数
如果没有提供任何构造函数，则C++自动提供默认构造函数。
10.3.4析构函数
当对象过期时，程序将自动调用析构函数来完成清理工作。析构函数的名称很特殊：在类名前加上~，例如Stock类的析构函数为~Stock()。可以为它编写不执行任何操作的函数。

6.const成员函数
为了保证函数不会修改调用对象，c++将const关键字放到函数的括号后面。
eg：
void show() const;
void Stock::show() const{}
以这种方式声明和定义的类函数被称为const成员函数，只要类方法不修改调用对象，就应该将其声明为const。

10.4this指针
this指针指向用来调用成员函数的对象。一般来说，所有的类方法都将this指针设置为调用他的对象的地址。
返回类型为引用意味着返回的是调用对象本身，而不是其副本。

10.5对象数组
声明对象数组的方法与声明标准类型数组相同。

10.6 类作用域
在类中定义的名称（类的成员和函数）的作用域都为整个类，作用域为整个类的名称只在该类中是已知的，在类外是不可知。
在定义成员函数时，必须使用作用域解析运算符。

10.6.1作用域为类的常量
声明常量：
1.在类中声明一个枚举，在类声明中声明的枚举的作用域为整个类。
2.使用关键字static定义常量。

10.6.2作用域内枚举（c++11）
c++11提供了一种新枚举 ，其枚举量的作用域为类
声明：
enum class egg{Small,Medium,Large,Jumbo};
或使用关键字struct代替class




